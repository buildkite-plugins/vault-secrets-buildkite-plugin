#!/usr/bin/env bash

authenticate(){
  # Authenticate to Vault

  return 0
}

help() {
  echo "$0 --pipeline <pipeline name> --var <variable name> [--value <value>]
    --debug - enable xtrace
    --help  - this ...
    --pipeline - BK pipeline to add secrets for
    --var environment variable to update
    --value to add, can also be passed via STDIN
    --basepath - base path for secrets in vault, defaults to kv/buildkite

    Env vars:
    VAULT_ADDR - URL to access your Vault Server (required)
  "
}

getVarValue() {
  local input=''
  if (( $# == 0 )) ; then
    input=$(cat < /dev/stdin)
  else
    input="$*"
  fi

  echo "${input}"
}

if ! set -o noclobber -o nounset -o pipefail; then
  echo "Incorrect options provided"
  show_help
  exit 1
fi

BASE_PATH="kv/buildkite"
if [ -z "${VAULT_ADDR:-}" ] ; then
  echo "set env var VAULT_ADDR for your vault server"
  exit 1
fi

while [ "${@+defined}" ]; do
    case "$1" in
        --help) help ;;
        --debug) set -o xtrace ;;
        --pipeline) shift ; PIPELINE="/${1}" ;;
        --basepath) shift ; BASE_PATH="${1}" ;;
        --var) shift ; var="${1}" ;;
        --value) shift ; value="${1}" ;;
        --) shift ; break ;;
        *)
            echo "Not implemented: ${1}" >&2
            exit 1
            ;;
    esac
    shift
done

if [[ -z "${PIPELINE:-}" ]] ; then
    echo "Usage: $0 --pipeline <pipeline>
      --pipeline is a required argument."
    exit 1
fi

vault token-lookup > /dev/null 2>&1

authenticate
if [ -n "${value:-}" ] ; then
  _val=$(getVarValue "${value:-}")
else
  _val=$(getVarValue)
fi
vault write "${BASE_PATH}${PIPELINE}/env/${var}" value="${var}='${_val}'"
